import { z } from "zod";
import type { WebProverSessionConfig } from "./message.js";
export declare const RedactRequestHeadersSchema: z.ZodObject<{
    request: z.ZodObject<{
        headers: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        headers: string[];
    }, {
        headers: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    request: {
        headers: string[];
    };
}, {
    request: {
        headers: string[];
    };
}>;
export declare const RedactRequestHeadersExceptSchema: z.ZodObject<{
    request: z.ZodObject<{
        headers_except: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        headers_except: string[];
    }, {
        headers_except: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    request: {
        headers_except: string[];
    };
}, {
    request: {
        headers_except: string[];
    };
}>;
export declare const RedactRequestUrlQueryParamSchema: z.ZodObject<{
    request: z.ZodObject<{
        url_query: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        url_query: string[];
    }, {
        url_query: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    request: {
        url_query: string[];
    };
}, {
    request: {
        url_query: string[];
    };
}>;
export declare const RedactRequestUrlQueryParamExceptSchema: z.ZodObject<{
    request: z.ZodObject<{
        url_query_except: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        url_query_except: string[];
    }, {
        url_query_except: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    request: {
        url_query_except: string[];
    };
}, {
    request: {
        url_query_except: string[];
    };
}>;
export declare const RedactResponseHeadersSchema: z.ZodObject<{
    response: z.ZodObject<{
        headers: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        headers: string[];
    }, {
        headers: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    response: {
        headers: string[];
    };
}, {
    response: {
        headers: string[];
    };
}>;
export declare const RedactResponseHeadersExceptSchema: z.ZodObject<{
    response: z.ZodObject<{
        headers_except: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        headers_except: string[];
    }, {
        headers_except: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    response: {
        headers_except: string[];
    };
}, {
    response: {
        headers_except: string[];
    };
}>;
export declare const RedactResponseJsonBodySchema: z.ZodObject<{
    response: z.ZodObject<{
        json_body: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        json_body: string[];
    }, {
        json_body: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    response: {
        json_body: string[];
    };
}, {
    response: {
        json_body: string[];
    };
}>;
export declare const RedactResponseJsonBodyExceptSchema: z.ZodObject<{
    response: z.ZodObject<{
        json_body_except: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        json_body_except: string[];
    }, {
        json_body_except: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    response: {
        json_body_except: string[];
    };
}, {
    response: {
        json_body_except: string[];
    };
}>;
export declare const RedactionItemSchema: z.ZodUnion<[z.ZodObject<{
    request: z.ZodObject<{
        headers: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        headers: string[];
    }, {
        headers: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    request: {
        headers: string[];
    };
}, {
    request: {
        headers: string[];
    };
}>, z.ZodObject<{
    request: z.ZodObject<{
        headers_except: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        headers_except: string[];
    }, {
        headers_except: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    request: {
        headers_except: string[];
    };
}, {
    request: {
        headers_except: string[];
    };
}>, z.ZodObject<{
    request: z.ZodObject<{
        url_query: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        url_query: string[];
    }, {
        url_query: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    request: {
        url_query: string[];
    };
}, {
    request: {
        url_query: string[];
    };
}>, z.ZodObject<{
    request: z.ZodObject<{
        url_query_except: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        url_query_except: string[];
    }, {
        url_query_except: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    request: {
        url_query_except: string[];
    };
}, {
    request: {
        url_query_except: string[];
    };
}>, z.ZodObject<{
    response: z.ZodObject<{
        headers: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        headers: string[];
    }, {
        headers: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    response: {
        headers: string[];
    };
}, {
    response: {
        headers: string[];
    };
}>, z.ZodObject<{
    response: z.ZodObject<{
        headers_except: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        headers_except: string[];
    }, {
        headers_except: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    response: {
        headers_except: string[];
    };
}, {
    response: {
        headers_except: string[];
    };
}>, z.ZodObject<{
    response: z.ZodObject<{
        json_body: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        json_body: string[];
    }, {
        json_body: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    response: {
        json_body: string[];
    };
}, {
    response: {
        json_body: string[];
    };
}>, z.ZodObject<{
    response: z.ZodObject<{
        json_body_except: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        json_body_except: string[];
    }, {
        json_body_except: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    response: {
        json_body_except: string[];
    };
}, {
    response: {
        json_body_except: string[];
    };
}>]>;
export type RedactRequestHeadersExcept = z.infer<typeof RedactRequestHeadersExceptSchema>;
export type RedactRequestHeaders = z.infer<typeof RedactRequestHeadersSchema>;
export type RedactRequestUrlQueryParam = z.infer<typeof RedactRequestUrlQueryParamSchema>;
export type RedactRequestUrlQueryParamExcept = z.infer<typeof RedactRequestUrlQueryParamExceptSchema>;
export type RedactResponseHeaders = z.infer<typeof RedactResponseHeadersSchema>;
export type RedactResponseJsonBody = z.infer<typeof RedactResponseJsonBodySchema>;
export type RedactResponseJsonBodyExcept = z.infer<typeof RedactResponseJsonBodyExceptSchema>;
export type RedactResponseHeadersExcept = z.infer<typeof RedactResponseHeadersExceptSchema>;
export type RedactionItem = z.infer<typeof RedactionItemSchema>;
export declare const RedactionItemsArray: z.ZodEffects<z.ZodEffects<z.ZodEffects<z.ZodEffects<z.ZodArray<z.ZodUnion<[z.ZodObject<{
    request: z.ZodObject<{
        headers: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        headers: string[];
    }, {
        headers: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    request: {
        headers: string[];
    };
}, {
    request: {
        headers: string[];
    };
}>, z.ZodObject<{
    request: z.ZodObject<{
        headers_except: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        headers_except: string[];
    }, {
        headers_except: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    request: {
        headers_except: string[];
    };
}, {
    request: {
        headers_except: string[];
    };
}>, z.ZodObject<{
    request: z.ZodObject<{
        url_query: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        url_query: string[];
    }, {
        url_query: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    request: {
        url_query: string[];
    };
}, {
    request: {
        url_query: string[];
    };
}>, z.ZodObject<{
    request: z.ZodObject<{
        url_query_except: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        url_query_except: string[];
    }, {
        url_query_except: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    request: {
        url_query_except: string[];
    };
}, {
    request: {
        url_query_except: string[];
    };
}>, z.ZodObject<{
    response: z.ZodObject<{
        headers: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        headers: string[];
    }, {
        headers: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    response: {
        headers: string[];
    };
}, {
    response: {
        headers: string[];
    };
}>, z.ZodObject<{
    response: z.ZodObject<{
        headers_except: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        headers_except: string[];
    }, {
        headers_except: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    response: {
        headers_except: string[];
    };
}, {
    response: {
        headers_except: string[];
    };
}>, z.ZodObject<{
    response: z.ZodObject<{
        json_body: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        json_body: string[];
    }, {
        json_body: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    response: {
        json_body: string[];
    };
}, {
    response: {
        json_body: string[];
    };
}>, z.ZodObject<{
    response: z.ZodObject<{
        json_body_except: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        json_body_except: string[];
    }, {
        json_body_except: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    response: {
        json_body_except: string[];
    };
}, {
    response: {
        json_body_except: string[];
    };
}>]>, "many">, ({
    request: {
        headers: string[];
    };
} | {
    request: {
        headers_except: string[];
    };
} | {
    request: {
        url_query: string[];
    };
} | {
    request: {
        url_query_except: string[];
    };
} | {
    response: {
        headers: string[];
    };
} | {
    response: {
        headers_except: string[];
    };
} | {
    response: {
        json_body: string[];
    };
} | {
    response: {
        json_body_except: string[];
    };
})[], ({
    request: {
        headers: string[];
    };
} | {
    request: {
        headers_except: string[];
    };
} | {
    request: {
        url_query: string[];
    };
} | {
    request: {
        url_query_except: string[];
    };
} | {
    response: {
        headers: string[];
    };
} | {
    response: {
        headers_except: string[];
    };
} | {
    response: {
        json_body: string[];
    };
} | {
    response: {
        json_body_except: string[];
    };
})[]>, ({
    request: {
        headers: string[];
    };
} | {
    request: {
        headers_except: string[];
    };
} | {
    request: {
        url_query: string[];
    };
} | {
    request: {
        url_query_except: string[];
    };
} | {
    response: {
        headers: string[];
    };
} | {
    response: {
        headers_except: string[];
    };
} | {
    response: {
        json_body: string[];
    };
} | {
    response: {
        json_body_except: string[];
    };
})[], ({
    request: {
        headers: string[];
    };
} | {
    request: {
        headers_except: string[];
    };
} | {
    request: {
        url_query: string[];
    };
} | {
    request: {
        url_query_except: string[];
    };
} | {
    response: {
        headers: string[];
    };
} | {
    response: {
        headers_except: string[];
    };
} | {
    response: {
        json_body: string[];
    };
} | {
    response: {
        json_body_except: string[];
    };
})[]>, ({
    request: {
        headers: string[];
    };
} | {
    request: {
        headers_except: string[];
    };
} | {
    request: {
        url_query: string[];
    };
} | {
    request: {
        url_query_except: string[];
    };
} | {
    response: {
        headers: string[];
    };
} | {
    response: {
        headers_except: string[];
    };
} | {
    response: {
        json_body: string[];
    };
} | {
    response: {
        json_body_except: string[];
    };
})[], ({
    request: {
        headers: string[];
    };
} | {
    request: {
        headers_except: string[];
    };
} | {
    request: {
        url_query: string[];
    };
} | {
    request: {
        url_query_except: string[];
    };
} | {
    response: {
        headers: string[];
    };
} | {
    response: {
        headers_except: string[];
    };
} | {
    response: {
        json_body: string[];
    };
} | {
    response: {
        json_body_except: string[];
    };
})[]>, ({
    request: {
        headers: string[];
    };
} | {
    request: {
        headers_except: string[];
    };
} | {
    request: {
        url_query: string[];
    };
} | {
    request: {
        url_query_except: string[];
    };
} | {
    response: {
        headers: string[];
    };
} | {
    response: {
        headers_except: string[];
    };
} | {
    response: {
        json_body: string[];
    };
} | {
    response: {
        json_body_except: string[];
    };
})[], ({
    request: {
        headers: string[];
    };
} | {
    request: {
        headers_except: string[];
    };
} | {
    request: {
        url_query: string[];
    };
} | {
    request: {
        url_query_except: string[];
    };
} | {
    response: {
        headers: string[];
    };
} | {
    response: {
        headers_except: string[];
    };
} | {
    response: {
        json_body: string[];
    };
} | {
    response: {
        json_body_except: string[];
    };
})[]>;
export type RedactionConfig = RedactionItem[];
export declare function getRedactionConfig(provingSessionConfig: WebProverSessionConfig): RedactionConfig;
//# sourceMappingURL=redaction.d.ts.map